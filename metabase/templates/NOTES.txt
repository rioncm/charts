1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "metabase.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "metabase.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "metabase.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "metabase.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

{{- if ne .Values.internalHostname "" }}

2. For in-cluster access, use the internal service:
   Service name: {{ .Values.internalHostname }}
   Port: {{ .Values.service.port }}
   Full URL: http://{{ .Values.internalHostname }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}
{{- end }}

{{- if eq .Values.database.type "h2" }}

3. Database Configuration:
   You are using the default H2 database. For production usage, consider switching to PostgreSQL or MySQL.
   Data is persisted to: /metabase-data/metabase.db
{{- else if eq .Values.database.type "postgresql" }}

3. Database Configuration:
   You are using PostgreSQL database at {{ .Values.database.postgresql.host }}:{{ .Values.database.postgresql.port }}
{{- else if eq .Values.database.type "mysql" }}

3. Database Configuration:
   You are using MySQL database at {{ .Values.database.mysql.host }}:{{ .Values.database.mysql.port }}
{{- end }}

{{- if and .Values.metabase.admin.email .Values.metabase.admin.password }}

4. Admin Setup:
   An admin user has been configured with email: {{ .Values.metabase.admin.email }}
   Please change the default password after first login.
{{- else }}

4. Admin Setup:
   Please complete the initial Metabase setup by creating an admin user through the web interface.
{{- end }}
