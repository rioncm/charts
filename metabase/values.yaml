# Default values for metabase.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: metabase/metabase
  pullPolicy: IfNotPresent
  tag: "v0.50.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  hosts:
    - host: metabase.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: metabase-tls
      hosts:
        - metabase.example.com

# Internal service name for in-cluster access
internalHostname: metabase

resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Persistence configuration
persistence:
  enabled: true
  storageClass: ""  # Use default storage class
  accessMode: ReadWriteOnce
  size: 10Gi

# Database configuration
database:
  # Options: h2 (default), postgresql, mysql
  type: h2
  
  # For H2 database (default)
  h2:
    # H2 will use the persistent volume

  # PostgreSQL configuration (when type: postgresql)
  postgresql:
    host: ""
    port: 5432
    database: metabase
    username: metabase
    password: ""
    # Use existing secret for password
    existingSecret: ""
    secretKey: ""
    
  # MySQL configuration (when type: mysql)
  mysql:
    host: ""
    port: 3306
    database: metabase
    username: metabase
    password: ""
    # Use existing secret for password
    existingSecret: ""
    secretKey: ""

# Environment variables
env: []
  # - name: MB_JAVA_TIMEZONE
  #   value: "UTC"
  # - name: MB_EMAIL_SMTP_HOST
  #   value: "smtp.example.com"

# Additional environment variables from secrets
envFromSecrets: []
  # - secretName: metabase-secrets

# Metabase specific configuration
metabase:
  # Site URL for email links and embedding
  siteUrl: ""
  
  # Admin email and password (optional, for initial setup)
  admin:
    email: ""
    password: ""
    firstName: "Admin"
    lastName: "User"
    
  # Java heap size
  javaOpts: "-Xmx1g"
  
  # Timezone
  timezone: "UTC"

# Health checks
livenessProbe:
  httpGet:
    path: /api/health
    port: http
  initialDelaySeconds: 120
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 6

readinessProbe:
  httpGet:
    path: /api/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
