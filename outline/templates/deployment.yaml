apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "outline.fullname" . }}
  namespace: {{ include "outline.namespace" . }}
  labels:
    {{- include "outline.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "outline.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "outline.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "outline.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.database.initialize }}
      initContainers:
        - name: db-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- $sslMode := (.Values.database.sslMode | default "require" | lower) }}
          command:
            - /bin/sh
            - -c
            - |-
              set -e
              yarn sequelize db:migrate --env={{ if eq $sslMode "disable" }}production-ssl-disabled{{ else }}production{{ end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "outline.configMapName" . }}
          {{- if .Values.secrets.existingSecret }}
            - secretRef:
                name: {{ .Values.secrets.existingSecret }}
          {{- end }}
          {{- if .Values.database.existingSecret }}
            - secretRef:
                name: {{ .Values.database.existingSecret }}
          {{- end }}
          {{- range .Values.extraEnvFrom }}
            {{- toYaml (list .) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.database.url }}
            - name: DATABASE_URL
              value: {{ .Values.database.url | quote }}
            {{- else if .Values.database.existingSecret }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: {{ .Values.database.existingSecretKey }}
            {{- end }}
            {{- range .Values.extraEnv }}
            - name: {{ .name }}
              {{- if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- else }}
              value: {{ .value | quote }}
              {{- end }}
            {{- end }}
          volumeMounts:
            - name: outline-data
              mountPath: {{ .Values.fileStorage.localRootDir | default "/var/lib/outline/data" | quote }}
            {{- range .Values.extraVolumeMounts }}
            - {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- end }}
      containers:
        - name: outline
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port | default 3000 }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml (omit .Values.livenessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml (omit .Values.readinessProbe "enabled") | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "outline.configMapName" . }}
          {{- if .Values.secrets.existingSecret }}
            - secretRef:
                name: {{ .Values.secrets.existingSecret }}
          {{- end }}
          {{- if .Values.database.existingSecret }}
            - secretRef:
                name: {{ .Values.database.existingSecret }}
          {{- end }}
          {{- range .Values.extraEnvFrom }}
            {{- toYaml (list .) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.database.url }}
            - name: DATABASE_URL
              value: {{ .Values.database.url | quote }}
            {{- else if .Values.database.existingSecret }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: {{ .Values.database.existingSecretKey }}
            {{- end }}
            {{- range .Values.extraEnv }}
            - name: {{ .name }}
              {{- if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- else }}
              value: {{ .value | quote }}
              {{- end }}
            {{- end }}
          volumeMounts:
            - name: outline-data
              mountPath: {{ .Values.fileStorage.localRootDir | default "/var/lib/outline/data" | quote }}
            {{- range .Values.extraVolumeMounts }}
            - {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.redis.enabled }}
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
        {{- end }}
      volumes:
        - name: outline-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "outline.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- range .Values.extraVolumes }}
        - {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
